package org.apache.cayenne.testdo.testmap.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;
import org.apache.cayenne.testdo.testmap.Ball;
import org.apache.cayenne.testdo.testmap.Box;
import org.apache.cayenne.testdo.testmap.Thing;

/**
 * Class _Bag was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Bag extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    @Deprecated
    public static final String NAME_PROPERTY = "name";
    @Deprecated
    public static final String BALLS_PROPERTY = "balls";
    @Deprecated
    public static final String BOXES_PROPERTY = "boxes";
    @Deprecated
    public static final String THINGS_PROPERTY = "things";

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<String> NAME = new Property<String>("name");
    public static final Property<List<Ball>> BALLS = new Property<List<Ball>>("balls");
    public static final Property<List<Box>> BOXES = new Property<List<Box>>("boxes");
    public static final Property<List<Thing>> THINGS = new Property<List<Thing>>("things");

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    @SuppressWarnings("unchecked")
    public List<Ball> getBalls() {
        return (List<Ball>)readProperty("balls");
    }


    public void addToBoxes(Box obj) {
        addToManyTarget("boxes", obj, true);
    }
    public void removeFromBoxes(Box obj) {
        removeToManyTarget("boxes", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Box> getBoxes() {
        return (List<Box>)readProperty("boxes");
    }


    @SuppressWarnings("unchecked")
    public List<Thing> getThings() {
        return (List<Thing>)readProperty("things");
    }


}
