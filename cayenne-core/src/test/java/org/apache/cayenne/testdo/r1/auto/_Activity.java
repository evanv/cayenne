package org.apache.cayenne.testdo.r1.auto;

import java.sql.Date;
import java.util.Map;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;
import org.apache.cayenne.testdo.r1.ActivityResult;

/**
 * Class _Activity was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Activity extends CayenneDataObject {

    @Deprecated
    public static final String APPOINTMENT_DATE_PROPERTY = "appointmentDate";
    @Deprecated
    public static final String APPOINTMENT_NO_PROPERTY = "appointmentNo";
    @Deprecated
    public static final String RESULTS_PROPERTY = "results";

    public static final String ACTIVITY_ID_PK_COLUMN = "ACTIVITY_ID";

    public static final Property<Date> APPOINTMENT_DATE = new Property<Date>("appointmentDate");
    public static final Property<Integer> APPOINTMENT_NO = new Property<Integer>("appointmentNo");
    public static final Property<Map<String, ActivityResult>> RESULTS = new Property<Map<String, ActivityResult>>("results");

    public void setAppointmentDate(Date appointmentDate) {
        writeProperty("appointmentDate", appointmentDate);
    }
    public Date getAppointmentDate() {
        return (Date)readProperty("appointmentDate");
    }

    public void setAppointmentNo(int appointmentNo) {
        writeProperty("appointmentNo", appointmentNo);
    }
    public int getAppointmentNo() {
        Object value = readProperty("appointmentNo");
        return (value != null) ? (Integer) value : 0;
    }

    public void addToResults(ActivityResult obj) {
        addToManyTarget("results", obj, true);
    }
    public void removeFromResults(ActivityResult obj) {
        removeToManyTarget("results", obj, true);
    }
    @SuppressWarnings("unchecked")
    public Map<String, ActivityResult> getResults() {
        return (Map<String, ActivityResult>)readProperty("results");
    }


}
